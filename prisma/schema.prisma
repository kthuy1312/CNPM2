// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enums
enum UserRole {
  ADMIN
  RESTAURANT
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  DISABLED
}

enum OrderStatus {
  ORDERED
  PROCESSING
  DELIVERY
  COMPLETED
  CANCELLED
}

enum PayStatus {
  PENDING
  PAID
}

enum PayChannel {
  VNPAY
}

enum DroneStatus {
  FREE
  BUSY
}

enum DroneJobStatus {
  QUEUED
  ARRIVING
  DROPPED
}

// Models
model User {
  id           Int        @id @default(autoincrement())
  name         String
  email        String        @unique
  phone        String?
  passwordHash String
  role         UserRole      @default(CUSTOMER)
  status       UserStatus    @default(ACTIVE)
  createdAt    DateTime      @default(now())

  restaurants  Restaurant[]
  orders       Order[]       @relation("CustomerOrders")

  @@map("users")
}

model Restaurant {
  id          Int      @id @default(autoincrement())
  ownerUserId Int
  name        String
  address     String?
  latitude    Decimal?    @db.Decimal(10,6)
  longitude   Decimal?    @db.Decimal(10,6)
  isOpen      Boolean     @default(true)
  vnpayId     String?
  createdAt   DateTime    @default(now())

  owner       User        @relation(fields: [ownerUserId], references: [id])
  menus       Menu[]
  orders      Order[]

  @@index([ownerUserId])
  @@map("restaurants")
}

model Menu {
  id           Int      @id @default(autoincrement())
  restaurantId Int
  name         String?
  isActive     Boolean     @default(true)
  createdAt    DateTime    @default(now())

  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  items        MenuItem[]

  @@index([restaurantId])
  @@map("menus")
}

model MenuItem {
  id        Int       @id @default(autoincrement())
  menuId    Int
  name      String
  basePrice Decimal       @db.Decimal(10,2)
  isActive  Boolean       @default(true)
  createdAt DateTime      @default(now())

  menu      Menu          @relation(fields: [menuId], references: [id])
  options   ItemOption[]
  orderItems OrderItem[]

  @@index([menuId])
  @@map("menu_items")
}

model ItemOption {
  id         Int      @id @default(autoincrement())
  itemId     Int
  name       String
  type       String       @default("single") // "single" | "multi"
  isRequired Boolean      @default(false)

  item       MenuItem     @relation(fields: [itemId], references: [id])
  values     OptionValue[]

  @@index([itemId])
  @@map("item_options")
}

model OptionValue {
  id        Int            @id @default(autoincrement())
  optionId  Int
  label     String
  addPrice  Decimal           @default(0) @db.Decimal(10,2)

  option    ItemOption        @relation(fields: [optionId], references: [id])
  orderItemOptions OrderItemOption[]

  @@index([optionId])
  @@map("option_values")
}

model Order {
  id              Int       @id @default(autoincrement())
  customerId      Int
  restaurantId    Int
  totalAmount     Decimal      @db.Decimal(12,2)
  status          OrderStatus  @default(ORDERED)
  paymentStatus   PayStatus    @default(PENDING)
  paymentChannel  PayChannel   @default(VNPAY)
  deliveryAddress String?
  latitude        Decimal?     @db.Decimal(10,6)
  longitude       Decimal?     @db.Decimal(10,6)
  note            String?
  createdAt       DateTime     @default(now())
  arrivedAt       DateTime?
  completedAt     DateTime?
  cancelledBy     String?
  cancelledReason String?

  customer    User        @relation("CustomerOrders", fields: [customerId], references: [id])
  restaurant  Restaurant  @relation(fields: [restaurantId], references: [id])
  items       OrderItem[]
  droneJobs   DroneJob[]

  @@index([customerId])
  @@index([restaurantId])
  @@index([status])
  @@map("orders")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  itemId    Int
  qty       Int
  unitPrice Decimal     @db.Decimal(10,2)

  order     Order      @relation(fields: [orderId], references: [id])
  item      MenuItem   @relation(fields: [itemId], references: [id])
  options   OrderItemOption[]

  @@index([orderId])
  @@index([itemId])
  @@map("order_items")
}

model OrderItemOption {
  id            Int      @id @default(autoincrement())
  orderItemId   Int
  optionValueId Int
  addPrice      Decimal      @default(0) @db.Decimal(10,2)

  orderItem     OrderItem    @relation(fields: [orderItemId], references: [id])
  optionValue   OptionValue  @relation(fields: [optionValueId], references: [id])

  @@index([orderItemId])
  @@index([optionValueId])
  @@map("order_item_options")
}

model Drone {
  id         Int       @id @default(autoincrement())
  name       String
  batteryPct Int          @default(100)
  status     DroneStatus  @default(FREE)

  jobs       DroneJob[]

  @@index([status])
  @@map("drones")
}

model DroneJob {
  id        Int        @id @default(autoincrement())
  orderId   Int
  droneId   Int
  status    DroneJobStatus @default(QUEUED)
  eta       DateTime?
  createdAt DateTime      @default(now())

  order     Order         @relation(fields: [orderId], references: [id])
  drone     Drone         @relation(fields: [droneId], references: [id])

  @@index([orderId])
  @@index([droneId])
  @@map("drone_jobs")
}
